# Web Framework and API
fastapi>=0.68.0
uvicorn>=0.15.0

# Database
sqlalchemy>=1.4.0
psycopg2-binary>=2.9.0
alembic>=1.7.0

# HTTP and API Requests
requests>=2.26.0
httpx>=0.24.0

# Data Processing and Analysis
pandas>=1.3.0
numpy>=1.21.0

# Cache and Redis
redis>=4.0.0

# Geographical Operations
geopy>=2.2.0
networkx>=2.6.0

# XML and JSON Processing
xmltodict>=0.12.0

# Environment Variables
python-dotenv>=0.19.0

# CORS and Middleware
starlette>=0.14.0

# Type Checking and Validation
pydantic>=1.8.0
email-validator>=1.1.0

# Security
python-jose[cryptography]>=3.3.0
passlib[bcrypt]>=1.7.0

# Logging and Colored Output
colorama>=0.4.4

# Installation Instructions:
# 1. Create a virtual environment in the backend directory:
#    python -m venv venv  # Python version should be >= 3.9
#
# 2. Activate the virtual environment:
#    - On Windows: .\venv\Scripts\activate
#    - On Unix/MacOS: source venv/bin/activate
#
# 3. Upgrade pip:
#    pip install --upgrade pip
#
# 4. Install requirements:
#    pip install -r requirements.txt
#
# Database Setup (PostgreSQL):
# 1. Start PostgreSQL service:
#    sudo systemctl start postgresql
#
# 2. (Optional) Enable PostgreSQL to start on boot:
#    sudo systemctl enable postgresql
#
# 3. Verify PostgreSQL status:
#    sudo systemctl status postgresql
#
# 4. Access PostgreSQL:
#    sudo -u postgres psql
#
# 5. Inside psql shell:
#    - Check users: \du
#    - Exit psql: \q
#    Note: We use 'munibuddy_db' database with SQLAlchemy
#
# Cache Setup (Redis):
# 1. Test Redis connection:
#    redis-cli ping
#    If you get 'PONG' response, Redis is working correctly
#
# Running the Backend:
# 1. Make sure you're in the backend directory with venv activated
# 2. Start the development server:
#    uvicorn app.main:app --reload
# 3. The backend will be available at:
#    http://127.0.0.1:8000
#
# Note: You can press Ctrl+C to stop the server and return to your venv environment