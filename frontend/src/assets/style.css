/* ==== Font Import ==== */
@import url('https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,100..900;1,100..900&display=swap');

/* ==== Theme Variables ==== */
:root {
  /* Color Palette */
  --purpleDark: #580074;
  --purple: #7A00A3;
  --purpleMid: #AB34D3;
  --purpleLight: #EAAAFF;
  --greenDark: #00553B;
  --greenLight: #A8F2DC;
  --grayDark: #333;
  --grayMid: #666;
  --grayLight1: #CCC;
  --grayLight2: #EDEDED;
  --white: #ffffff;
  --black: #000000;

  /* Font */
  --font-main: "Public Sans", system-ui, sans-serif;

  /* Default (Light Theme) Effective Variables */
  --current-text-color: var(--grayDark);
  --current-bg-color: var(--white);
  --current-bg-color-rgb: 255,255,255; /* RGB for opacity */
  --current-card-bg: var(--white);
  --current-inputBorder: var(--grayLight1);
  --current-inputText: var(--grayDark);
  --current-input-bg: var(--grayLight2);
  --current-grayLight1-val: var(--grayLight1);
  --current-grayLight2-val: var(--grayLight2);
  --current-grayDark-val: var(--grayDark);
  --current-grayMid-val: var(--grayMid);
  --current-box-shadow: rgba(0,0,0,0.05);
  --current-border-color: var(--grayLight1);

  /* Base transition for theme changes */
  transition: background-color 0.3s ease, color 0.3s ease;
}

/* ==== Dark Theme Mode Variables ==== */
:root[data-theme="dark"] {
  --current-text-color: #e0e0e0;
  --current-bg-color: #121212;
  --current-bg-color-rgb: 18,18,18; /* RGB for opacity */
  --current-card-bg: #1e1e1e;
  --current-inputBorder: #555;
  --current-inputText: #e0e0e0;
  --current-input-bg: #2c2c2c;
  --current-grayLight1-val: #424242;
  --current-grayLight2-val: #333333;
  --current-grayDark-val: #bdbdbd;
  --current-grayMid-val: #757575;
  --current-box-shadow: rgba(255,255,255,0.05);
  --current-border-color: #424242;
}

/* ==== Light Theme Mode Variables (Explicit) ==== */
:root[data-theme="light"] {
  --current-text-color: var(--grayDark);
  --current-bg-color: var(--white);
  --current-bg-color-rgb: 255,255,255;
  --current-card-bg: var(--white);
  --current-inputBorder: var(--grayLight1);
  --current-inputText: var(--grayDark);
  --current-input-bg: var(--grayLight2);
  --current-grayLight1-val: var(--grayLight1);
  --current-grayLight2-val: var(--grayLight2);
  --current-grayDark-val: var(--grayDark);
  --current-grayMid-val: var(--grayMid);
  --current-box-shadow: rgba(0,0,0,0.05);
  --current-border-color: var(--grayLight1);
}

/* ==== System Preference Handling ==== */
/* System Dark */
@media (prefers-color-scheme: dark) {
  :root[data-theme="system"] {
    --current-text-color: #e0e0e0;
    --current-bg-color: #121212;
    --current-bg-color-rgb: 18,18,18;
    --current-card-bg: #1e1e1e;
    --current-inputBorder: #555;
    --current-inputText: #e0e0e0;
    --current-input-bg: #2c2c2c;
    --current-grayLight1-val: #424242;
    --current-grayLight2-val: #333333;
    --current-grayDark-val: #bdbdbd;
    --current-grayMid-val: #757575;
    --current-box-shadow: rgba(255,255,255,0.05);
    --current-border-color: #424242;
  }
}
/* System Light */
@media (prefers-color-scheme: light) {
  :root[data-theme="system"] {
    --current-text-color: var(--grayDark);
    --current-bg-color: var(--white);
    --current-bg-color-rgb: 255,255,255;
    --current-card-bg: var(--white);
    --current-inputBorder: var(--grayLight1);
    --current-inputText: var(--grayDark);
    --current-input-bg: var(--grayLight2);
    --current-grayLight1-val: var(--grayLight1);
    --current-grayLight2-val: var(--grayLight2);
    --current-grayDark-val: var(--grayDark);
    --current-grayMid-val: var(--grayMid);
    --current-box-shadow: rgba(0,0,0,0.05);
    --current-border-color: var(--grayLight1);
  }
}

/* ==== Base HTML/Body/Root Styles ==== */
html, body {
  margin: 0;
  padding: 0;
  font-family: var(--font-main);
  background-color: var(--current-bg-color);
  color: var(--current-text-color);
  line-height: 1.6; /* Slightly increased line height */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  height: 100%;
  overflow: hidden; /* Prevent body scroll, rely on inner scroll containers */
}

#root { /* Assuming React mounts here */
    height: 100%;
}

/* ==== Headings ==== */
h1, h2, h3, h4, h5, h6 {
  margin: 0;
  font-weight: 600;
  color: var(--purpleDark); /* Default heading color */
}
/* Dark theme headings */
:root[data-theme="dark"] h1, :root[data-theme="dark"] h2, :root[data-theme="dark"] h3, :root[data-theme="dark"] h4, :root[data-theme="dark"] h5, :root[data-theme="dark"] h6 {
  color: var(--purpleLight);
}
/* System dark theme headings */
@media (prefers-color-scheme: dark) {
  :root[data-theme="system"] h1, :root[data-theme="system"] h2, :root[data-theme="system"] h3, :root[data-theme="system"] h4, :root[data-theme="system"] h5, :root[data-theme="system"] h6 {
    color: var(--purpleLight);
  }
}

/* ==== Overall Layout Structure ==== */
.overall-layout {
  display: flex;
  flex-direction: column;
  height: 100%; /* Full viewport height */
  overflow: hidden; /* Prevent this container from scrolling */
  background-color: var(--current-bg-color);
}

/* Top Sticky Panel */
.top-fixed-panel {
  background-color: var(--current-bg-color);
  box-shadow: 0 2px 5px var(--current-box-shadow);
  z-index: 1050; /* Ensure it's above map controls/markers */
  position: sticky; /* Stick to the top of .overall-layout */
  top: 0;
  left: 0;
  right: 0;
}
/* Ensure padding inside the MUI Container within the panel */
.top-fixed-panel .MuiContainer-root {
    padding-top: 0.75rem !important;
    padding-bottom: 0.75rem !important;
}

/* Main Content Area (Scrollable) */
.main-content-scrollable-area {
  flex-grow: 1; /* Take remaining vertical space */
  overflow-y: auto; /* Enable vertical scrolling ONLY for this area */
  background-color: var(--current-bg-color); /* Match overall background */
}
/* Ensure padding inside the MUI Container within the scrollable area */
.main-content-scrollable-area > .MuiContainer-root {
    padding-top: 1rem !important;
    padding-bottom: 1rem !important;
}

/* Map and Transit Info Grid Items */
.map-grid-item-dynamic-height,
.transit-info-panel-dynamic-height {
  display: flex;
  flex-direction: column; /* Allow content to grow vertically */
}

/* Map Container within the grid item */
.map-grid-item-dynamic-height > .MuiBox-root { /* Targets the Box wrapping Map */
    flex-grow: 1; /* Allows map to fill vertical space in its grid item */
    min-height: 280px; /* Ensure minimum map height */
    border-radius: 8px;
    overflow: hidden; /* Clip map corners */
}

/* Desktop Layout (Side-by-side Map & Transit Info) */
@media screen and (min-width: 900px) { /* MUI 'md' breakpoint */
  .main-content-scrollable-area > .MuiContainer-root > .MuiGrid-container {
    display: flex;
    height: 100%;
  }
  .map-grid-item-dynamic-height,
  .transit-info-panel-dynamic-height {
    /* On desktop, set a max height to prevent them from becoming too tall */
    /* Adjust 160px based on the ACTUAL measured height of your top-fixed-panel + desired padding */
    height: calc(100vh - 160px);
    max-height: 70vh; /* Example max height constraint */
  }
  .transit-info-panel-dynamic-height {
    overflow-y: auto; /* Allow transit info panel to scroll independently */
  }
}

/* Mobile Layout (Stacked Map & Transit Info) */
@media screen and (max-width: 899px) { /* Below 'md' */
    .main-content-scrollable-area .MuiGrid-container {
        flex-direction: column; /* Stack items vertically */
    }
    .map-grid-item-dynamic-height > .MuiBox-root {
        height: 300px; /* Fixed map height on smaller screens */
        margin-bottom: 1rem; /* Space between map and transit info */
    }
    .transit-info-panel-dynamic-height {
        height: auto; /* Let content determine height */
        overflow-y: visible; /* Don't scroll independently, let the main area scroll */
    }
}

/* ==== Styles for Controls in Top Panel ==== */
.top-fixed-panel .MuiTextField-root .MuiOutlinedInput-root {
  border-radius: 2rem !important;
  background-color: var(--current-input-bg) !important;
  font-size: 0.9rem;
}
.top-fixed-panel .MuiTextField-root .MuiOutlinedInput-notchedOutline {
  border: 1px solid var(--current-inputBorder) !important;
}
/* Style placeholder text */
.top-fixed-panel .MuiTextField-root .MuiInputBase-input::placeholder {
  color: var(--current-grayMid-val) !important; /* Use -val suffixed var */
  opacity: 0.8;
}
/* General button styles in top panel */
.top-fixed-panel .MuiButton-root {
  font-family: var(--font-main) !important;
  font-weight: 600 !important;
  border-radius: 2rem !important;
  text-transform: none !important;
  padding: 6px 16px !important;
  font-size: 0.875rem;
  box-shadow: none !important;
}
/* Contained (primary) button style */
.top-fixed-panel .MuiButton-containedPrimary {
  background-color: var(--purple) !important;
  color: var(--white) !important;
}
.top-fixed-panel .MuiButton-containedPrimary:hover {
  background-color: var(--purpleDark) !important;
}
/* Outlined button style */
.top-fixed-panel .MuiButton-outlined {
  color: var(--purple) !important;
  border-color: var(--purple) !important;
}
.top-fixed-panel .MuiButton-outlined:hover {
  background-color: var(--purpleLight) !important;
  color: var(--purpleDark) !important;
}
/* Slider styles */
.top-fixed-panel .MuiSlider-root {
    color: var(--purple) !important;
}
.top-fixed-panel .MuiSlider-rail {
    color: var(--purpleLight) !important;
    opacity: 0.7;
}

/* ==== TransitInfo Panel Specific Styles ==== */
.transit-card-custom { /* The Card component wrapping TransitInfo */
  background-color: var(--current-card-bg) !important;
  border: 1px solid var(--current-border-color) !important;
  border-radius: 8px !important;
  box-shadow: 0 1px 3px var(--current-box-shadow) !important;
}
.transit-card-custom .MuiCardContent-root {
    padding: 0.75rem !important;
}

/* "Nearby Stops (X)" header */
.transit-section-header {
  font-size: 0.8rem !important;
  color: var(--current-grayMid-val) !important; /* Use -val suffix */
  padding-left: 0.25rem !important;
  font-weight: 700 !important;
  margin-bottom: 0.75rem !important;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

/* Individual Stop Item in the List */
.transit-card-custom .MuiListItemButton-root {
  padding-top: 0.6rem !important;
  padding-bottom: 0.6rem !important;
  border-radius: 6px !important;
  margin-bottom: 4px; /* Add small space between stop items */
}
.transit-card-custom .MuiListItemButton-root:hover {
  background-color: var(--current-input-bg) !important;
}
/* Stop Name */
.transit-card-custom .MuiListItemButton-root .MuiTypography-fontWeightMedium {
  font-size: 0.9rem !important;
  color: var(--current-text-color) !important;
  font-weight: 500 !important;
}
/* Distance Chip */
.transit-card-custom .MuiListItemButton-root .MuiChip-root {
  background-color: var(--current-grayLight2-val) !important; /* Use -val suffix */
  color: var(--current-grayDark-val) !important; /* Use -val suffix */
  font-size: 0.7rem !important;
  height: 20px !important;
  padding: 2px 5px !important;
}
/* Dark theme override for distance chip background */
:root[data-theme="dark"] .transit-card-custom .MuiListItemButton-root .MuiChip-root {
  background-color: #383838 !important;
  color: var(--current-grayDark-val) !important;
}

/* Collapsed Section Styles (where schedule appears) */
.transit-card-custom .MuiCollapse-root .MuiBox-root[role="region"] {
  padding-top: 0.5rem !important;
  padding-left: 0.8rem !important; /* Increased padding to align text after border */
  padding-right: 0.25rem !important;
  padding-bottom: 0.1rem !important; /* Reduce bottom padding */
  border-left: 3px solid var(--purpleLight) !important;
  margin-left: 0.5rem !important;
  margin-bottom: 0.5rem !important;
}
/* Refresh button inside collapse */
.transit-card-custom .MuiCollapse-root .MuiButton-root { /* Targeting button inside collapse */
  margin-bottom: 0.75rem !important;
  font-size: 0.8rem !important;
  padding: 3px 10px !important; /* Adjust padding */
}

/* Inbound/Outbound Headers */
.transit-card-custom .MuiCollapse-root .MuiTypography-overline {
  font-size: 0.65rem !important;
  color: var(--current-grayMid-val) !important; /* Use -val suffix */
  font-weight: 700 !important;
  margin-bottom: 0.25rem !important;
  line-height: 1.4; /* Adjust line height */
}

/* Individual Route Info Box */
.transit-list-item-custom .route-info-box {
  background-color: var(--purpleDark) !important;
  color: var(--white) !important;
  padding: 0.6rem 0.75rem !important;
  margin-bottom: 0.5rem !important;
  border-radius: 6px !important;
}
/* Dark theme adjustment for route box */
:root[data-theme="dark"] .transit-list-item-custom .route-info-box {
  background-color: var(--purple) !important;
}

/* Route Title (Number + Destination) */
.route-info-box .route-title {
  font-size: 0.95rem !important;
  font-weight: 600 !important;
  color: var(--white) !important;
  display: flex;
  align-items: center;
  white-space: nowrap; /* Prevent wrapping */
  overflow: hidden; /* Hide overflow */
  text-overflow: ellipsis; /* Add ellipsis if too long */
}
.route-info-box .route-title .route-destination {
  font-weight: 400;
  font-size: 0.9em;
  opacity: 0.85;
  margin-left: 4px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
/* Prediction Times Chip */
.route-info-box .MuiChip-root {
  font-size: 0.7rem !important;
  padding: 2px 6px !important;
  height: 20px !important;
  /* Colors are handled by JS */
}
/* Arrival/Vehicle Text */
.route-info-box .route-arrival-detail,
.route-info-box .route-vehicle-location,
.route-info-box .route-vehicle-location-unavailable {
  font-size: 0.75rem !important;
  margin-top: 0.25rem !important;
  color: var(--purpleLight) !important;
  opacity: 0.9;
}
/* Dark theme adjustment for text on purple */
:root[data-theme="dark"] .route-info-box .route-arrival-detail,
:root[data-theme="dark"] .route-info-box .route-vehicle-location,
:root[data-theme="dark"] .route-info-box .route-vehicle-location-unavailable {
  color: #d1c4e9 !important;
}

/* "No upcoming transit" text */
.transit-empty {
  color: var(--current-grayMid-val) !important; /* Use -val suffix */
  font-size: 0.85rem !important;
  text-align: center;
  padding: 1rem 0;
}
/* Error Alert styling */
.transit-card-custom .MuiAlert-root {
  font-size: 0.8rem !important;
  padding: 4px 10px !important;
}

/* ==== Map Marker & InfoWindow Styles ==== */
.custom-map-marker img {
  transition: transform 0.1s ease-in-out;
}
.custom-map-marker:hover img {
  transform: scale(1.15);
}

/* Google Maps InfoWindow */
.gm-style .gm-style-iw-c { /* Container */
  padding: 8px !important;
  border-radius: 6px !important;
  max-width: 240px !important;
  background-color: var(--current-card-bg) !important;
  box-shadow: 0 2px 8px var(--current-box-shadow) !important;
  border: 1px solid var(--current-border-color);
}
.gm-style .gm-style-iw-d { /* Content */
  overflow: visible !important;
  font-size: 0.8rem !important;
  color: var(--current-text-color) !important;
  padding-right: 0 !important;
}
/* InfoWindow Title */
.gm-style .gm-style-iw-d strong,
.gm-style .gm-style-iw-d .MuiTypography-subtitle2 {
  color: var(--purple) !important;
  font-weight: 600;
}
/* Dark theme InfoWindow Title */
:root[data-theme="dark"] .gm-style .gm-style-iw-d strong,
:root[data-theme="dark"] .gm-style .gm-style-iw-d .MuiTypography-subtitle2 {
  color: var(--purpleLight) !important;
}

/* Hide Google's default InfoWindow close button */
.gm-style button[title="Close"] {
  visibility: hidden !important; /* Hide it cleanly */
  /* display: none !important; */ /* Alternative */
}